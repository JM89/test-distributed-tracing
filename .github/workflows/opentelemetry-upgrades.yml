name: OpenTelemetry upgrade

on:
  pull_request:
    #types: [opened, reopened]
  workflow_dispatch:

env:
  PR_TITLE_FILTER: 'Bump OpenTelemetry from'
  BRANCH_NAME_FILTER: 'dependabot'

jobs:
  detect-opentelemetry-upgrades:
    outputs:
      need_fix: ${{ steps.check.outputs.need_fix }}
      opentelemetry_version: ${{ steps.check.outputs.opentelemetry_version }}
      opentelemetry_library: ${{ steps.check.outputs.opentelemetry_library }}
    runs-on: ubuntu-latest
    steps:
      - name: Set default vars
        run: | 
          echo "need_fix=false" >> "$GITHUB_OUTPUT"
      - name: Dependabots Bump OpenTelemetry detected 
        id: check
        if: ${{ startsWith(github.event.pull_request.title, env.PR_TITLE_FILTER) }} && 
            ${{ startsWith(github.event.pull_request.head.ref, env.BRANCH_NAME_FILTER) }} 
        run: | 
            echo "opentelemetry_version=$(echo '${{ github.event.pull_request.title }}' | sed 's/.* //')" >> "$GITHUB_OUTPUT"
            echo "opentelemetry_library=$(echo '${{ github.event.pull_request.title }}' | sed 's/.*Bump //' | cut -f1 -d' ')" >> "$GITHUB_OUTPUT"
            echo "need_fix=true" >> "$GITHUB_OUTPUT"
            echo "Dependabots Bump OpenTelemetry detected"

  fix-opentelemetry-dependencies: 
    runs-on: ubuntu-latest
    needs: detect-opentelemetry-upgrades
    if: ${{ needs.detect-opentelemetry-upgrades.outputs.need_fix == 'true' }}
    steps:
      - uses: actions/checkout@v3  
        with:
          token: ${{ secrets.PAT }}
      - name: Setup .NET Core SDK ${{ env.DOTNET_ENV }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_ENV }}
      - name: Save library version
        run: echo "opentelemetry_version=${{ needs.detect-opentelemetry-upgrades.outputs.opentelemetry_version }}" >> $GITHUB_ENV
      - name: Force all ${{ needs.detect-opentelemetry-upgrades.outputs.opentelemetry_library }} libraries on all projects
        run: |
            echo Upgrade to OpenTelemetry ${{ env.opentelemetry_version }}
            dotnet add ./MyLambda/MyLambda.csproj package OpenTelemetry --version ${{ env.opentelemetry_version }}
            dotnet add ./MyLambda/MyLambda.csproj package OpenTelemetry.Api --version ${{ env.opentelemetry_version }}
            dotnet add ./MyLambda/MyLambda.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
            dotnet add ./MyLambda/MyLambda.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
            dotnet add ./SampleApi.One/SampleApi.One.csproj package OpenTelemetry.Api --version ${{ env.opentelemetry_version }}
            dotnet add ./SampleApi.One/SampleApi.One.csproj package OpenTelemetry.Exporter.Console --version ${{ env.opentelemetry_version }}
            dotnet add ./SampleApi.One/SampleApi.One.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
            dotnet add ./SampleApi.One/SampleApi.One.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
            dotnet add ./SampleApi.Two/SampleApi.Two.csproj package OpenTelemetry.Api --version ${{ env.opentelemetry_version }}
            dotnet add ./SampleApi.Two/SampleApi.Two.csproj package OpenTelemetry.Exporter.Console --version ${{ env.opentelemetry_version }}
            dotnet add ./SampleApi.Two/SampleApi.Two.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
            dotnet add ./SampleApi.Two/SampleApi.Two.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
            dotnet add ./Shared/Shared.csproj package OpenTelemetry --version ${{ env.opentelemetry_version }}
            dotnet add ./Shared/Shared.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
            dotnet add ./Shared/Shared.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
            dotnet add ./Worker/Worker.csproj package OpenTelemetry --version ${{ env.opentelemetry_version }}
            dotnet add ./Worker/Worker.csproj package OpenTelemetry.Exporter.Console --version ${{ env.opentelemetry_version }}
            dotnet add ./Worker/Worker.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
            dotnet add ./Worker/Worker.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
      - name: Commit changes to PR
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
            commit_message: Fix all CSPROJ projects
