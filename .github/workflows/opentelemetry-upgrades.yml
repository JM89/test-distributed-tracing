name: OpenTelemetry upgrade

on:
  push:
    branches:
      - main
  pull_request:
  #  types: [opened]
  workflow_dispatch:

env:
  PR_TITLE_FILTER: 'Bump OpenTelemetry from'
  BRANCH_NAME_FILTER: 'task/opentelemetry-lib-update'

jobs:
  debug: 
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
  force-trigger-ci:
    # https://github.com/stefanzweifel/git-auto-commit-action#commits-made-by-this-action-do-not-trigger-new-workflow-runs
    runs-on: ubuntu-latest
    steps:
      - name: Force the execution of the main build
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: Solution build
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Force PR check
        uses: LouisBrunner/checks-action@v1.3.1
        with:
            sha: ${{ github.sha }}
            token: ${{ github.token }}
            name: Solution build
            status: in_progress

  #detect-opentelemetry-upgrades:
  #  outputs:
  #    status: ${{ steps.check.conclusion }}
  #    opentelemetry_version: ${{ steps.check.outputs.opentelemetry_version }}
  #    opentelemetry_library: ${{ steps.check.outputs.opentelemetry_library }}
  #  runs-on: ubuntu-latest
  #  steps:
  #    #- name: Dump GitHub context
  #    #  env:
  #    #    GITHUB_CONTEXT: ${{ toJson(github) }}
  #    - name: Dependabots Bump OpenTelemetry detected 
  #      id: check
  #      if: ${{ startsWith(github.event.pull_request.title, env.PR_TITLE_FILTER) }} && 
  #          ${{ startsWith(github.event.pull_request.head.ref, env.BRANCH_NAME_FILTER) }} 
  #      run: | 
  #          echo "opentelemetry_version=$(echo '${{ github.event.pull_request.title }}' | sed 's/.* //')" >> "$GITHUB_OUTPUT"
  #          echo "opentelemetry_library=$(echo '${{ github.event.pull_request.title }}' | sed 's/.*Bump //' | cut -f1 -d' ')" >> "$GITHUB_OUTPUT"
  #          echo "Dependabots Bump OpenTelemetry detected"

  #fix-opentelemetry-dependencies: 
  #  runs-on: ubuntu-latest
  #  needs: detect-opentelemetry-upgrades
  #  if: needs.detect-opentelemetry-upgrades.outputs.status == 'success'
  #  steps:
  #    - uses: actions/checkout@v3
  #    - name: Setup .NET Core SDK ${{ env.DOTNET_ENV }}
  #      uses: actions/setup-dotnet@v3
  #      with:
  #        dotnet-version: ${{ env.DOTNET_ENV }}
  #    - name: Save library version
  #      run: echo "opentelemetry_version=${{ needs.detect-opentelemetry-upgrades.outputs.opentelemetry_version }}" >> $GITHUB_ENV
  #    - name: Force all ${{ needs.detect-opentelemetry-upgrades.outputs.opentelemetry_library }} libraries on all projects
  #      run: |
  #          echo Upgrade to OpenTelemetry ${{ env.opentelemetry_version }}
  #          dotnet add ./MyLambda/MyLambda.csproj package OpenTelemetry --version ${{ env.opentelemetry_version }}
  #          dotnet add ./MyLambda/MyLambda.csproj package OpenTelemetry.Api --version ${{ env.opentelemetry_version }}
  #          dotnet add ./MyLambda/MyLambda.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
  #          dotnet add ./MyLambda/MyLambda.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
  #          dotnet add ./SampleApi.One/SampleApi.One.csproj package OpenTelemetry.Api --version ${{ env.opentelemetry_version }}
  #          dotnet add ./SampleApi.One/SampleApi.One.csproj package OpenTelemetry.Exporter.Console --version ${{ env.opentelemetry_version }}
  #          dotnet add ./SampleApi.One/SampleApi.One.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
  #          dotnet add ./SampleApi.One/SampleApi.One.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
  #          dotnet add ./SampleApi.Two/SampleApi.Two.csproj package OpenTelemetry.Api --version ${{ env.opentelemetry_version }}
  #          dotnet add ./SampleApi.Two/SampleApi.Two.csproj package OpenTelemetry.Exporter.Console --version ${{ env.opentelemetry_version }}
  #          dotnet add ./SampleApi.Two/SampleApi.Two.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
  #          dotnet add ./SampleApi.Two/SampleApi.Two.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
  #          dotnet add ./Shared/Shared.csproj package OpenTelemetry --version ${{ env.opentelemetry_version }}
  #          dotnet add ./Shared/Shared.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
  #          dotnet add ./Shared/Shared.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
  #          dotnet add ./Worker/Worker.csproj package OpenTelemetry --version ${{ env.opentelemetry_version }}
  #          dotnet add ./Worker/Worker.csproj package OpenTelemetry.Exporter.Console --version ${{ env.opentelemetry_version }}
  #          dotnet add ./Worker/Worker.csproj package OpenTelemetry.Exporter.OpenTelemetryProtocol --version ${{ env.opentelemetry_version }}
  #          dotnet add ./Worker/Worker.csproj package OpenTelemetry.Exporter.Zipkin --version ${{ env.opentelemetry_version }}
  #    - name: Commit changes to PR
  #      uses: stefanzweifel/git-auto-commit-action@v4.16.0
  #      with:
  #          commit_message: Fix all CSPROJ projects
